{"version":3,"sources":["main.js"],"names":["burger","document","querySelector","menu","link","querySelectorAll","addEventListener","classList","toggle","forEach","el","remove","swiperBloquote","Swiper","speed","spaceBetween","navigation","nextEl","prevEl","swiperPlace","loop","slidesPerView","centeredSlides","init","myMap","ymaps","Map","center","zoom","suppressMapOpenBlock","geolocationControlSize","geolocationControlPosition","top","right","geolocationControlFloat","zoomControlSize","zoomControlFloat","zoomControlPosition","myPlacemark","Placemark","geoObjects","add","ready","popupBg","popup","openPopupButtons","closePopupButton","button","e","body","style","overflow","target","selector","im","Inputmask","mask","$","submit","event","preventDefault","ajax","type","url","data","FormData","this","contentType","cache","processData","success","alert"],"mappings":"AAAA,MAAAA,OAAAC,SAAAC,cAAA,WACAC,KAAAF,SAAAC,cAAA,QACAE,KAAAH,SAAAI,iBAAA,cAEAL,OAAAM,iBAAA,SAAA,KACAN,OAAAO,UAAAC,OAAA,QACAL,KAAAI,UAAAC,OAAA,WAGAJ,KAAAK,SAAAC,IACAA,EAAAJ,iBAAA,SAAA,KACAN,OAAAO,UAAAI,OAAA,QACAR,KAAAI,UAAAI,OAAA,cAIA,MAAAC,eAAA,IAAAC,OAAA,oBAAA,CACAC,MAAA,IACAC,aAAA,IACAC,WAAA,CACAC,OAAA,kBACAC,OAAA,qBAIAC,YAAA,IAAAN,OAAA,iBAAA,CACAO,MAAA,EACAN,MAAA,IACAC,aAAA,GACAC,WAAA,CACAC,OAAA,eACAC,OAAA,gBAEAG,cAAA,OACAC,gBAAA,IAOA,SAAAC,OAEA,IAAAC,EAAA,IAAAC,MAAAC,IAAA,MAAA,CAKAC,OAAA,CAAA,kBAAA,mBAGAC,KAAA,IAEA,CACAC,sBAAA,EACAC,uBAAA,QACAC,2BAAA,CAAAC,IAAA,QAAAC,MAAA,QACAC,wBAAA,OACAC,gBAAA,QACAC,iBAAA,OACAC,oBAAA,CAAAL,IAAA,QAAAC,MAAA,UAEAK,EAAA,IAAAb,MAAAc,UAAA,CAAA,kBAAA,mBAAA,GAAA,IAMAf,EAAAgB,WAAAC,IAAAH,GA5BAb,MAAAiB,MAAAnB,MAgCA,IAAAoB,QAAA1C,SAAAC,cAAA,aACA0C,MAAA3C,SAAAC,cAAA,UACA2C,iBAAA5C,SAAAI,iBAAA,cACAyC,iBAAA7C,SAAAC,cAAA,iBACA2C,iBAAApC,SAAAsC,IACAA,EAAAzC,iBAAA,SAAA0C,IACAL,QAAApC,UAAAkC,IAAA,UACAG,MAAArC,UAAAkC,IAAA,UACAxC,SAAAgD,KAAAC,MAAAC,SAAA,eAIAL,iBAAAxC,iBAAA,SAAA,KACAqC,QAAApC,UAAAI,OAAA,UACAiC,MAAArC,UAAAI,OAAA,UACAV,SAAAgD,KAAAC,MAAAC,SAAA,aAGAlD,SAAAK,iBAAA,SAAA0C,IACAA,EAAAI,SAAAT,UACAA,QAAApC,UAAAI,OAAA,UACAiC,MAAArC,UAAAI,OAAA,cAKA,IAAA0C,SAAApD,SAAAC,cAAA,qBAEAoD,GAAA,IAAAC,UAAA,qBAEAD,GAAAE,KAAAH,UAyCAI,EAAA,gBAAAC,QAAA,SAAAC,GACAA,EAAAC,iBAIAH,EAAAI,KAAA,CACAC,KAAA,OACAC,IAAA,cACAC,KAAA,IAAAC,SAAAC,MACAC,aAAA,EACAC,OAAA,EACAC,aAAA,EACAC,QAAA,WACAC,MAAA","file":"app.js","sourcesContent":["const burger = document.querySelector('.burger'),\r\n      menu = document.querySelector('.nav'),\r\n      link = document.querySelectorAll('.nav__link');\r\n\r\nburger.addEventListener('click', () => {\r\n  burger.classList.toggle('open');\r\n  menu.classList.toggle('open');\r\n})\r\n\r\nlink.forEach((el) => {\r\n  el.addEventListener('click', () => {\r\n    burger.classList.remove('open');\r\n    menu.classList.remove('open');\r\n  })\r\n});\r\n\r\nconst swiperBloquote = new Swiper('.bloquote__swiper', {\r\n  speed: 400,\r\n  spaceBetween: 100,\r\n  navigation: {\r\n    nextEl: '.bloquote__next',\r\n    prevEl: '.bloquote__prev',\r\n  },\r\n});\r\n\r\nconst swiperPlace = new Swiper('.place__swiper', {\r\n  loop: true,\r\n  speed: 400,\r\n  spaceBetween: 30,\r\n  navigation: {\r\n    nextEl: '.place__next',\r\n    prevEl: '.place__prev',\r\n  },\r\n  slidesPerView: \"auto\",\r\n  centeredSlides: true,\r\n  // freeMode: true,\r\n});\r\n\r\n// map\r\n\r\nymaps.ready(init) \r\n    function init(){\r\n        // Создание карты.\r\n        var myMap = new ymaps.Map(\"map\", {\r\n            // Координаты центра карты.\r\n            // Порядок по умолчанию: «широта, долгота».\r\n            // Чтобы не определять координаты центра карты вручную,\r\n            // воспользуйтесь инструментом Определение координат.\r\n            center: [50.99410759278144,3.820905843631552],\r\n            // Уровень масштабирования. Допустимые значения:\r\n            // от 0 (весь мир) до 19.\r\n            zoom: 11\r\n        },\r\n        {\r\n            suppressMapOpenBlock: true,\r\n            geolocationControlSize: \"large\",\r\n            geolocationControlPosition: { top: \"200px\", right: \"20px\" },\r\n            geolocationControlFloat: 'none',\r\n            zoomControlSize: \"small\",\r\n            zoomControlFloat: \"none\",\r\n            zoomControlPosition: { top: \"120px\", right: \"20px\" }\r\n        });\r\n        var myPlacemark = new ymaps.Placemark([50.99410759278144,3.720905843631552], {}, {\r\n          // iconLayout: 'default#image',\r\n          // iconImageHref: 'Subtract.svg',\r\n          // iconImageSize: [28, 30],\r\n        });\r\n\r\n        myMap.geoObjects.add(myPlacemark);\r\n      }\r\n\r\n// modal\r\nlet popupBg = document.querySelector('.popup-bg'); // Фон попап окна\r\n  let popup = document.querySelector('.popup'); // Само окно\r\n  let openPopupButtons = document.querySelectorAll('.hero__btn'); // Кнопки для показа окна\r\n  let closePopupButton = document.querySelector('.popup__close'); // Кнопка для скрытия окна\r\n  openPopupButtons.forEach((button) => { // Перебираем все кнопки\r\n    button.addEventListener('click', (e) => { // Для каждой вешаем обработчик событий на клик\r\n      popupBg.classList.add('active'); // Добавляем класс 'active' для фона\r\n      popup.classList.add('active'); // И для самого окна\r\n      document.body.style.overflow = 'hidden'\r\n    })\r\n  });\r\n\r\n  closePopupButton.addEventListener('click', () => { // Вешаем обработчик на крестик\r\n    popupBg.classList.remove('active'); // Убираем активный класс с фона\r\n    popup.classList.remove('active'); // И с окна\r\n    document.body.style.overflow = 'visible'\r\n  });\r\n\r\n  document.addEventListener('click', (e) => { // Вешаем обработчик на весь документ\r\n    if (e.target === popupBg) { // Если цель клика - фот, то:\r\n      popupBg.classList.remove('active'); // Убираем активный класс с фона\r\n      popup.classList.remove('active'); // И с окна\r\n    }\r\n  });\r\n\r\n// form\r\nlet selector = document.querySelector(\"input[type='tel']\");\r\n\r\nlet im = new Inputmask(\"+7(999) 999-99-99\");\r\n\r\nim.mask(selector);\r\n\r\n// const validation = new JustValidate('.popup__form');\r\n\r\n// validation\r\n//   .addField('#phone', [\r\n//     {\r\n//       rule: 'required',\r\n//       errorMessage: 'Phone is required',\r\n//     },\r\n//     // {\r\n//     //   rule: 'required',\r\n//     //   function: (name, value) => {\r\n//     //     const phone = selector.inputmask.unmaskedvalue()\r\n//     //     return Number(phone) && phone.length === 10\r\n//     //   },\r\n//     //   errorMessage: 'Minimum of 10 characters',\r\n//     // },\r\n//   ])\r\n//   .addField('#date', [\r\n//     {\r\n//       rule: 'required',\r\n//       errorMessage: 'Date is required',\r\n//     },\r\n//   ])\r\n//   .onSuccess((event) => {\r\n//     event.preventDefault();\r\n\r\n//   $.ajax({\r\n//     type:'POST',\r\n//     url:'../main.php',\r\n//     data: $('.popup__form').serialize(),\r\n//     contentType: false,\r\n//     cache: false,\r\n//     processData: false,\r\n//     success: function() {\r\n//       alert('Скоро с вами свяжутся для подтверждения')\r\n//     },\r\n//   })\r\n//   });\r\n\r\n$('.popup__form').submit(function(event) {\r\n  event.preventDefault();\r\n\r\n  // alert($(this).attr('action'));\r\n  // return\r\n  $.ajax({\r\n    type:'POST',\r\n    url:'../main.php',\r\n    data: new FormData(this),\r\n    contentType: false,\r\n    cache: false,\r\n    processData: false,\r\n    success: function() {\r\n      alert('Скоро с вами свяжутся для подтверждения')\r\n    },\r\n  })\r\n})\r\n"]}